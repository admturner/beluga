#!/bin/bash

#######################################
# Generates a random string.
# Arguments:
#   Generated string length, an integer
# Outputs:
#   Generated random alphanumeric string
#######################################
generate_credential() {
  local length="$1"
  local cred

  cred=$(date +%s | sha256sum | base64 | head -c "${length}")
  echo "${cred}"
}

#######################################
# Creates the env file based on user input.
# Arguments:
#   Setup method, either "interactive" or "manual"
# Outputs:
#   Generated .env file
#######################################
setup_env() {
  local mode="$1"
  local mysql_database
  local mysql_user
  local mysql_password
  local mysql_root_user
  local mysql_root_password

  if [[ "${mode}" == "interactive" ]]; then
    echo ''
    read -r -p '* MySQL database name: ' mysql_database
    read -r -p '* MySQL database user: ' mysql_user
    read -r -p '* MySQL database password: ' mysql_password
    read -r -p '* PhpMyAdmin username: ' mysql_root_user
    read -r -p '* PhpMyAdmin user password: ' mysql_root_password
  else
    echo -e 'Generating random credentials...'
    mysql_database="wordpress"
    mysql_user=$(generate_credential 8)
    sleep 1
    mysql_password=$(generate_credential 10)
    sleep 1
    mysql_root_password=$(generate_credential 16)
  fi

  echo -e 'Writing .env file...'

  ( cat <<ENV
# The Docker Compose environment variables file

############################################
# THIS FILE IS AUTOGENERATED BY ./bin/make #
############################################

# The name of the database for WordPress
MYSQL_DATABASE=${mysql_database}

# MySQL database username
MYSQL_USER=${mysql_user}

# MySQL database password
MYSQL_PASSWORD=${mysql_password}

# MySQL root password
MYSQL_ROOT_PASSWORD=${mysql_root_password}
ENV
  ) > './.env'

  if [[ ! -f './.env' ]]; then
    echo "Unable to create environment file."
    exit 1
  fi

  echo -e 'Created environment file. See "./.env" for results.'
}

#######################################
# Starts the script.
# Arguments:
#   None
#######################################
main() {
  echo -e '\n* Would you like to use the interactive prompt to set your own
  database credentials or automatically generate random credentials?\n'

  while read -r -p '  Generate random credentials? [Y/n] ' input; do
    case "${input}" in
      [yY])
        setup_env manual
        break
        ;;
      [nN])
        setup_env interactive
        break
        ;;
      *)
        echo 'Please select either y or n.'
        exit 1
        ;;
    esac
  done
}

main "$@"
